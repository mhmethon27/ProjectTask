#pragma checksum "C:\Users\METHON\source\repos\blog2\blog2\Views\Home\AdminPost.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d50738dabacbe0043bec36177a1a107c62f72c05"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_AdminPost), @"mvc.1.0.view", @"/Views/Home/AdminPost.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/AdminPost.cshtml", typeof(AspNetCore.Views_Home_AdminPost))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\METHON\source\repos\blog2\blog2\Views\_ViewImports.cshtml"
using blog2;

#line default
#line hidden
#line 2 "C:\Users\METHON\source\repos\blog2\blog2\Views\_ViewImports.cshtml"
using blog2.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d50738dabacbe0043bec36177a1a107c62f72c05", @"/Views/Home/AdminPost.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dc2125faec83fbdf8798abbd45b97b94362c7e89", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_AdminPost : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\METHON\source\repos\blog2\blog2\Views\Home\AdminPost.cshtml"
  
    ViewData["Title"] = "AdminPost";

#line default
#line hidden
            BeginContext(47, 37, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n");
            EndContext();
            BeginContext(84, 452, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d50738dabacbe0043bec36177a1a107c62f72c053590", async() => {
                BeginContext(90, 439, true);
                WriteLiteral(@"
    <title>Bootstrap Example</title>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"">
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js""></script>
    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js""></script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(536, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(538, 874, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d50738dabacbe0043bec36177a1a107c62f72c055222", async() => {
                BeginContext(544, 861, true);
                WriteLiteral(@"

    <div class=""container"" id=""Air"">
        <h2>Striped Rows</h2>
        <p>The .table-striped class adds zebra-stripes to a table:</p>
        <table class=""table table-striped"" v-for=""(item,index) in PostList"">
            <thead >
                <tr>
                    <th>Post {{item.id}}</th>
                    <th>Admin </th>
                    <th>{{item.date}} </th>
                    <th>Comments </th>
                </tr>
            </thead>
            <tbody v-for=""(dat,index) in CList"">
                <tr>

                    <td v-if=""item.id==dat.postId""><b>Comment </b>{{dat.id}}</td>
                    <td v-if=""item.id==dat.postId"">{{dat.userName}}</td>
                    <td v-if=""item.id==dat.postId"">{{dat.date}}</td>
                </tr>

            </tbody>
        </table>
    </div>

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1412, 1560, true);
            WriteLiteral(@"
</html>


<script src=""https://cdnjs.cloudflare.com/ajax/libs/vue/2.0.5/vue.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/axios/0.20.0/axios.min.js""></script>
<script>
    let vm = new Vue({
        el: '#Air',
        data: {
            comment: { postId: '' },
            PostList: [],
            CList: [],


        },
        methods: {
            commenttt(id) {
                this.comment.postId = id;
                console.log(this.comment);
                axios({
                    method: 'post',
                    url: '/Home/Create',
                    data: this.comment
                }).then(response => {
                    this.PostList = response.data;
                    console.log(this.PostList);
                })
            },
            GetAllPost() {
                axios({
                    method: 'get',
                    url: '/Home/Get',
                }).then(response => {
                    this.PostList = re");
            WriteLiteral(@"sponse.data;
                    console.log(this.PostList);
                })
            },
            GetAllComt() {
                axios({
                    method: 'get',
                    url: '/Home/GetComt',
                }).then(response => {
                    this.CList = response.data;
                    console.log(this.CList);
                })
            },


        },
        mounted() {
            this.GetAllPost();
            this.GetAllComt();

        }
    })
</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
