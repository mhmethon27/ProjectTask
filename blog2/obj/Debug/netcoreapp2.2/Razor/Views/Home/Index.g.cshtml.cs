#pragma checksum "C:\Users\METHON\source\repos\blog2\blog2\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1b8af122dfadcbcf37b3ae5fe4e0901f7b0d4100"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\METHON\source\repos\blog2\blog2\Views\_ViewImports.cshtml"
using blog2;

#line default
#line hidden
#line 2 "C:\Users\METHON\source\repos\blog2\blog2\Views\_ViewImports.cshtml"
using blog2.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1b8af122dfadcbcf37b3ae5fe4e0901f7b0d4100", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dc2125faec83fbdf8798abbd45b97b94362c7e89", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\METHON\source\repos\blog2\blog2\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    var AllBannerList = ViewBag.List;
    var AllProductlist = ViewBag.List1;


#line default
#line hidden
            BeginContext(127, 29, true);
            WriteLiteral("\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(156, 1879, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1b8af122dfadcbcf37b3ae5fe4e0901f7b0d41003534", async() => {
                BeginContext(162, 1685, true);
                WriteLiteral(@"
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <style>
        * {
            box-sizing: border-box;
        }

        /* Add a gray background color with some padding */
        body {
            font-family: Arial;
            padding: 20px;
            background: #f1f1f1;
        }

        /* Header/Blog Title */
        .header {
            padding: 30px;
            font-size: 40px;
            text-align: center;
            background: white;
        }

        /* Create two unequal columns that floats next to each other */
        /* Left column */
        .leftcolumn {
            float: left;
            width: 75%;
        }

        /* Right column */
        .rightcolumn {
            float: left;
            width: 25%;
            padding-left: 20px;
        }

        /* Fake image */
        .fakeimg {
            background-color: #aaa;
            width: 100%;
            padding: 20px;
        }

        /* Ad");
                WriteLiteral(@"d a card effect for articles */
        .card {
            background-color: white;
            padding: 20px;
            margin-top: 20px;
        }

        /* Clear floats after the columns */
        .row:after {
            content: """";
            display: table;
            clear: both;
        }

        /* Footer */
        .footer {
            padding: 20px;
            text-align: center;
            background: #ddd;
            margin-top: 20px;
        }

        /* Responsive layout - when the screen is less than 800px wide, make the two columns stack on top of each other instead of next to each other */
        ");
                EndContext();
                BeginContext(1848, 180, true);
                WriteLiteral("@media screen and (max-width: 800px) {\r\n            .leftcolumn, .rightcolumn {\r\n                width: 100%;\r\n                padding: 0;\r\n            }\r\n        }\r\n    </style>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2035, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(2037, 1475, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1b8af122dfadcbcf37b3ae5fe4e0901f7b0d41006753", async() => {
                BeginContext(2043, 1249, true);
                WriteLiteral(@"

    <div class=""header"">
        <h2>Blog Name</h2>
    </div>

    <div class=""row"" id=""AirTicketDomesticveiw"">
                <div class=""leftcolumn"">
                    <div class=""card"" v-for=""(item,index) in PostList"">
                        <h2> <b>title:</b>{{item.title}}</h2>
                        <h5><b>date:</b>{{item.date}}</h5>

                        <p><b>description:</b>{{item.description}}</p>
                        <div>
                            <b>Reply Comment:</b>
                            <div v-for=""(dat,index) in CList"">
                                <p v-if=""item.id==dat.postId"" ><b> Name:</b>{{dat.userName}}</p>
                                <p v-if=""item.id==dat.postId"" ><b>Comment:</b>{{dat.usercomment}}</p>
                            </div>
                            <br /><br />
                            Name:  <input type=""text"" v-model=""comment.UserName"" value=""Name""><br />
                            Comment:   <textarea name=""comments");
                WriteLiteral("\" id=\"comments\" v-model=\"comment.usercomment\" style=\"font-family:sans-serif;font-size:1.2em;\">\r\n        Hey... say something!\r\n        </textarea>\r\n                        </div>\r\n                        <input type=\"button\" ");
                EndContext();
                BeginContext(3293, 212, true);
                WriteLiteral("@click=\"commenttt(item.id )\"  value=\"Submit\">\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        \r\n\r\n    <div class=\"footer\">\r\n        <h2>Footer</h2>\r\n    </div>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3512, 1585, true);
            WriteLiteral(@"
</html>

<script src=""https://cdnjs.cloudflare.com/ajax/libs/vue/2.0.5/vue.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/axios/0.20.0/axios.min.js""></script>

<script>
    let vm = new Vue({
        el: '#AirTicketDomesticveiw',
        data: {
            comment: { postId:'' },
            PostList: [],
            CList: [],
            

        },
        methods: {
            commenttt(id) {
                this.comment.postId = id;
                console.log(this.comment);
                axios({
                    method: 'post',
                    url: '/Home/Create',
                    data: this.comment
                }).then(response => {
                    this.PostList = response.data;
                    console.log(this.PostList);
                })
            },
            GetAllPost() {
                axios({
                    method: 'get',
                    url: '/Home/Get',
                }).then(response => {
         ");
            WriteLiteral(@"           this.PostList = response.data;
                    console.log(this.PostList);
                })
            },
            GetAllComt() {
                axios({
                    method: 'get',
                    url: '/Home/GetComt',
                }).then(response => {
                    this.CList = response.data;
                    console.log(this.CList);
                })
            },


        },
        mounted() {
            this.GetAllPost();
            this.GetAllComt();

        }
    })
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
